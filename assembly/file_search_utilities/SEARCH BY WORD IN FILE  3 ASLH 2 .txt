; SEARCH BY CHEK SEARCH WORD == INPUT WORD 


stacksg segment para stack 
   sb    db       80 dup('0')
  
stacksg ends

datasg  segment para common 'data'
  

     word db 80 dup('$'),'$' ;word  
     line db 280 dup('$'),'$' ;line  
     SEARCHword db 80 dup('$'),'$' ;SEARCH
     char        db ?
     
     filename db 80 ;file name 
     filehandle  dw ?
     
     COUNT dW 00 ; found or not found  
     COUNT1 dW 00 ; found or not found
     WORDSIZE DW 00 
     LINESIZE DW 00 
     
     
    BREAK DB 10, 13,'$'
    TEXTINPUTS  DB  'Enter SEARCH WORD : ',0DH,0AH,'$'
    TEXTINPUTF  DB  'Enter FILE NAME ',0DH,0AH,'$' 

    buf1 db  'Error closing file..',0DH,0AH,'$'
    buf2 db  'File closed successfully...',0DH,0AH,'$'

    strOutput db 16 dup ('$')
 

    

datasg  ends

codesg  segment para common 'code'
main    proc    far
assume  ds:datasg,cs:codesg,es:datasg  


        MOV AX,dataSG
        MOV DS,AX
        MOV ES,AX 
        
        
        CALL INPUT_OPENFILE 
        
         XOR AX, AX                    
         XOR SI, SI                    
         XOR DI, DI
            
    CALL READ        
            
            

        
 MAIN ENDP 
 
 ;==================================================================
 INPUT_OPENFILE  PROC
   PUSH BX                        ; push BX onto the STACK
   PUSH CX                        ; push CX onto the STACK
   PUSH DX                        ; push DX onto the STACK
    ;/...................................................END CODE
   POP DX                         ; pop a value from STACK into DX
   POP CX                         ; pop a value from STACK into CX
   POP BX                         ; pop a value from STACK into   
       
 INPUT_OPENFILE  ENDP 
 
  ;==================================================================
 READ  PROC
   PUSH BX                        ; push BX onto the STACK
   PUSH CX                        ; push CX onto the STACK
   PUSH DX                        ; push DX onto the STACK
  SPACE:    ;CHEK FOR SEARCH KEY
  ENDFILE2:
        INT 21H  
EXIT:
		
            mov bx,filehandle
            mov ah, 3eh
            int 21h


            jnc success
             MOV AH,09H 
             LEA DX,BUF1
             INT 21H 
             
             mov ah, 4ch
            int 21h   
            
             
           
            success :
              MOV AH,09H 
            int 21h   
            
                     

    ;/...................................................END CODE
   POP DX                         ; pop a value from STACK into DX
   POP CX                         ; pop a value from STACK into CX
   POP BX                         ; pop a value from STACK into   
       
 READ  ENDP 
 
  
 ;==================================================================
 PRINT  PROC
 PRINT  ENDP 
   
end main
